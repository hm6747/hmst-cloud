[2m2018-09-07 17:09:53.683[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.gateway.HmstCloudGatewayApplication [0;39m [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2018-09-07 17:09:53.712[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36monfigReactiveWebServerApplicationContext[0;39m [2m:[0;39m Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@47ad69f7: startup date [Fri Sep 07 17:09:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@658c5a19
[2m2018-09-07 17:09:55.060[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2018-09-07 17:09:55.116[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.f.s.DefaultListableBeanFactory    [0;39m [2m:[0;39m Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
[2m2018-09-07 17:09:56.542[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m [2m:[0;39m BeanFactory id=81d1054d-0ca0-304b-92a7-96d0d35bf1c0
[2m2018-09-07 17:09:56.580[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mf.a.AutowiredAnnotationBeanPostProcessor[0;39m [2m:[0;39m JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2m2018-09-07 17:09:56.851[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mtrationDelegate$BeanPostProcessorChecker[0;39m [2m:[0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$27ca93eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2m2018-09-07 17:09:58.249[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.w.r.r.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped "{[/swagger-resources/configuration/ui],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration>> com.syscloud.gateway.config.SwaggerHandler.uiConfiguration()
[2m2018-09-07 17:09:58.250[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.w.r.r.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped "{[/swagger-resources],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity> com.syscloud.gateway.config.SwaggerHandler.swaggerResources()
[2m2018-09-07 17:09:58.251[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.w.r.r.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped "{[/swagger-resources/configuration/security],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration>> com.syscloud.gateway.config.SwaggerHandler.securityConfiguration()
[2m2018-09-07 17:09:58.371[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.w.r.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2m2018-09-07 17:09:58.371[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.w.r.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2m2018-09-07 17:10:08.107[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [After]
[2m2018-09-07 17:10:08.108[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Before]
[2m2018-09-07 17:10:08.108[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Between]
[2m2018-09-07 17:10:08.109[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Cookie]
[2m2018-09-07 17:10:08.109[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Header]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Host]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Method]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Path]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Query]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [ReadBodyPredicateFactory]
[2m2018-09-07 17:10:08.110[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [RemoteAddr]
[2m2018-09-07 17:10:08.111[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.g.r.RouteDefinitionRouteLocator   [0;39m [2m:[0;39m Loaded RoutePredicateFactory [Weight]
[2m2018-09-07 17:10:16.173[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.175[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.177[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.180[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.182[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.184[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.185[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.388[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.391[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler.handle(org.springframework.web.server.ServerWebExchange,java.util.Map<java.lang.String, java.lang.String>)
[2m2018-09-07 17:10:16.392[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.393[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.394[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.395[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler.handle(org.springframework.web.server.ServerWebExchange,java.util.Map<java.lang.String, java.lang.String>)
[2m2018-09-07 17:10:16.396[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.397[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.397[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.398[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.399[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.400[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.400[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.401[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.402[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler.handle(org.springframework.web.server.ServerWebExchange,java.util.Map<java.lang.String, java.lang.String>)
[2m2018-09-07 17:10:16.404[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.406[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.407[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler.handle(org.springframework.web.server.ServerWebExchange,java.util.Map<java.lang.String, java.lang.String>)
[2m2018-09-07 17:10:16.408[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36m.b.a.e.w.r.WebFluxEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.web.server.ServerWebExchange)
[2m2018-09-07 17:10:16.463[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routes/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.delete(java.lang.String)
[2m2018-09-07 17:10:16.464[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routes/{id}],methods=[POST]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.save(java.lang.String,reactor.core.publisher.Mono<org.springframework.cloud.gateway.route.RouteDefinition>)
[2m2018-09-07 17:10:16.464[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/refresh],methods=[POST]}" onto public reactor.core.publisher.Mono<java.lang.Void> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.refresh()
[2m2018-09-07 17:10:16.465[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routes],methods=[GET]}" onto public reactor.core.publisher.Mono<java.util.List<java.util.Map<java.lang.String, java.lang.Object>>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.routes()
[2m2018-09-07 17:10:16.465[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/globalfilters],methods=[GET]}" onto public reactor.core.publisher.Mono<java.util.HashMap<java.lang.String, java.lang.Object>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.globalfilters()
[2m2018-09-07 17:10:16.465[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routefilters],methods=[GET]}" onto public reactor.core.publisher.Mono<java.util.HashMap<java.lang.String, java.lang.Object>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.routefilers()
[2m2018-09-07 17:10:16.466[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routes/{id}/combinedfilters],methods=[GET]}" onto public reactor.core.publisher.Mono<java.util.HashMap<java.lang.String, java.lang.Object>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.combinedfilters(java.lang.String)
[2m2018-09-07 17:10:16.466[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ma.e.w.r.ControllerEndpointHandlerMapping[0;39m [2m:[0;39m Mapped "{[/actuator/gateway/routes/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<org.springframework.cloud.gateway.route.RouteDefinition>> org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint.route(java.lang.String)
[2m2018-09-07 17:10:16.762[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.w.r.r.m.a.ControllerMethodResolver  [0;39m [2m:[0;39m Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@47ad69f7: startup date [Fri Sep 07 17:09:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@658c5a19
[2m2018-09-07 17:10:16.983[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.c.a.AnnotationConfigApplicationContext[0;39m [2m:[0;39m Refreshing FeignContext-provider-user: startup date [Fri Sep 07 17:10:16 CST 2018]; parent: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@47ad69f7
[2m2018-09-07 17:10:17.006[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mf.a.AutowiredAnnotationBeanPostProcessor[0;39m [2m:[0;39m JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2m2018-09-07 17:10:17.199[0;39m [33m WARN[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[2m2018-09-07 17:10:17.200[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2m2018-09-07 17:10:17.207[0;39m [33m WARN[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[2m2018-09-07 17:10:17.207[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2m2018-09-07 17:10:19.227[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Registering beans for JMX exposure on startup
[2m2018-09-07 17:10:19.243[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2m2018-09-07 17:10:19.246[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Bean with name 'environmentManager' has been autodetected for JMX exposure
[2m2018-09-07 17:10:19.247[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Bean with name 'refreshScope' has been autodetected for JMX exposure
[2m2018-09-07 17:10:19.251[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2m2018-09-07 17:10:19.265[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2m2018-09-07 17:10:19.282[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.j.e.a.AnnotationMBeanExporter       [0;39m [2m:[0;39m Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=47ad69f7,type=ConfigurationPropertiesRebinder]
[2m2018-09-07 17:10:19.301[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.support.DefaultLifecycleProcessor [0;39m [2m:[0;39m Starting beans in phase 0
[2m2018-09-07 17:10:19.311[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.n.eureka.InstanceInfoFactory      [0;39m [2m:[0;39m Setting initial instance status as: STARTING
[2m2018-09-07 17:10:19.358[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Initializing Eureka in region us-east-1
[2m2018-09-07 17:10:19.474[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using JSON encoding codec LegacyJacksonJson
[2m2018-09-07 17:10:19.474[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using JSON decoding codec LegacyJacksonJson
[2m2018-09-07 17:10:19.777[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using XML encoding codec XStreamXml
[2m2018-09-07 17:10:19.777[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using XML decoding codec XStreamXml
[2m2018-09-07 17:10:20.116[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:10:20.181[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Disable delta property : false
[2m2018-09-07 17:10:20.181[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Single vip registry refresh property : null
[2m2018-09-07 17:10:20.181[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Force full registry fetch : false
[2m2018-09-07 17:10:20.181[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application is null : false
[2m2018-09-07 17:10:20.181[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Registered Applications size is zero : true
[2m2018-09-07 17:10:20.182[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application version is -1: true
[2m2018-09-07 17:10:20.182[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Getting all instance registry info from the eureka server
[2m2018-09-07 17:10:22.792[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m The response status is 200
[2m2018-09-07 17:10:22.803[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Starting heartbeat executor: renew interval is: 30
[2m2018-09-07 17:10:22.812[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.discovery.InstanceInfoReplicator    [0;39m [2m:[0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
[2m2018-09-07 17:10:22.825[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Discovery Client initialized at timestamp 1536311422824 with initial instances count: 0
[2m2018-09-07 17:10:22.830[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.n.e.s.EurekaServiceRegistry       [0;39m [2m:[0;39m Registering application hmst-gateway with eureka with status UP
[2m2018-09-07 17:10:22.830[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Saw local status change event StatusChangeEvent [timestamp=1536311422830, current=UP, previous=STARTING]
[2m2018-09-07 17:10:22.859[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.a.ScheduledAnnotationBeanPostProcessor[0;39m [2m:[0;39m No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2m2018-09-07 17:10:23.068[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[nfoReplicator-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m DiscoveryClient_HMST-GATEWAY/1GIB6TSCX00VUJ9:hmst-gateway:8762: registering service...
[2m2018-09-07 17:10:23.357[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[nfoReplicator-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m DiscoveryClient_HMST-GATEWAY/1GIB6TSCX00VUJ9:hmst-gateway:8762 - registration status: 204
[2m2018-09-07 17:10:23.875[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mr.ipc.netty.tcp.BlockingNettyContext    [0;39m [2m:[0;39m Started HttpServer on /0:0:0:0:0:0:0:0:8762
[2m2018-09-07 17:10:23.888[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.web.embedded.netty.NettyWebServer [0;39m [2m:[0;39m Netty started on port(s): 8762
[2m2018-09-07 17:10:23.938[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.gateway.HmstCloudGatewayApplication [0;39m [2m:[0;39m Started HmstCloudGatewayApplication in 39.853 seconds (JVM running for 42.53)
[2m2018-09-07 17:10:23.941[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.p.auth.runner.AuthClientRunner      [0;39m [2m:[0;39m 初始化加载用户pubKey
[2m2018-09-07 17:10:23.951[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.c.a.AnnotationConfigApplicationContext[0;39m [2m:[0;39m Refreshing SpringClientFactory-provider-user: startup date [Fri Sep 07 17:10:23 CST 2018]; parent: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@47ad69f7
[2m2018-09-07 17:10:24.180[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mf.a.AutowiredAnnotationBeanPostProcessor[0;39m [2m:[0;39m JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2m2018-09-07 17:10:24.888[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.netflix.config.ChainedDynamicProperty [0;39m [2m:[0;39m Flipping property: provider-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2m2018-09-07 17:10:24.904[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.u.concurrent.ShutdownEnabledTimer   [0;39m [2m:[0;39m Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-user
[2m2018-09-07 17:10:24.938[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.netflix.loadbalancer.BaseLoadBalancer [0;39m [2m:[0;39m Client: provider-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2m2018-09-07 17:10:24.969[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.l.DynamicServerListLoadBalancer     [0;39m [2m:[0;39m Using serverListUpdater PollingServerListUpdater
[2m2018-09-07 17:10:24.975[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.l.DynamicServerListLoadBalancer     [0;39m [2m:[0;39m DynamicServerListLoadBalancer for client provider-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@49616310
[2m2018-09-07 17:10:25.103[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.p.auth.runner.AuthClientRunner      [0;39m [2m:[0;39m 初始化加载用户pubKey失败,1分钟后自动重试!

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy125.getUserPublicKey(Unknown Source)
	at com.syscloud.provider.auth.runner.AuthClientRunner.refreshUserPubKey(AuthClientRunner.java:45)
	at com.syscloud.provider.auth.runner.AuthClientRunner.run(AuthClientRunner.java:32)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:790)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1234)
	at com.syscloud.gateway.HmstCloudGatewayApplication.main(HmstCloudGatewayApplication.java:18)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 12 common frames omitted

[2m2018-09-07 17:10:25.262[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.p.auth.runner.AuthClientRunner      [0;39m [2m:[0;39m 初始化加载客户pubKey
[2m2018-09-07 17:10:25.264[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.s.p.auth.runner.AuthClientRunner      [0;39m [2m:[0;39m 初始化加载客户pubKey失败,1分钟后自动重试!

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy125.getServicePublicKey(Unknown Source)
	at com.syscloud.provider.auth.runner.AuthClientRunner.refreshServicePubKey(AuthClientRunner.java:53)
	at com.syscloud.provider.auth.runner.AuthClientRunner.run(AuthClientRunner.java:38)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:790)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1234)
	at com.syscloud.gateway.HmstCloudGatewayApplication.main(HmstCloudGatewayApplication.java:18)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 12 common frames omitted

[2m2018-09-07 17:10:30.002[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[pool-8-thread-1][0;39m [36mo.s.s.s.TaskUtils$LoggingErrorHandler   [0;39m [2m:[0;39m Unexpected error occurred in scheduled task.

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy125.getAllowedClient(Unknown Source)
	at com.syscloud.provider.auth.jwt.ServiceAuthUtil.refreshAllowedClient(ServiceAuthUtil.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: provider-user
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 19 common frames omitted

[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Disable delta property : false
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Single vip registry refresh property : null
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Force full registry fetch : false
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application is null : false
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Registered Applications size is zero : true
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application version is -1: false
[2m2018-09-07 17:10:52.828[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Getting all instance registry info from the eureka server
[2m2018-09-07 17:10:53.050[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[freshExecutor-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m The response status is 200
[2m2018-09-07 17:10:56.039[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[erListUpdater-0][0;39m [36mc.netflix.config.ChainedDynamicProperty [0;39m [2m:[0;39m Flipping property: provider-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2m2018-09-07 17:11:01.647[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:11:01.692[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 用户Token过期异常

com.syscloud.base.auth.expection.auth.UserTokenException: User token is null or empty!
	at com.syscloud.provider.auth.jwt.UserAuthUtil.getInfoFromToken(UserAuthUtil.java:24)
	at com.syscloud.gateway.filter.GlobalRouteFilter.getJWTUser(GlobalRouteFilter.java:127)
	at com.syscloud.gateway.filter.GlobalRouteFilter.filter(GlobalRouteFilter.java:58)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.WebsocketRoutingFilter.filter(WebsocketRoutingFilter.java:65)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter.filter(AdaptCachedBodyGlobalFilter.java:45)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.LoadBalancerClientFilter.filter(LoadBalancerClientFilter.java:88)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter.filter(RouteToRequestUrlFilter.java:76)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory.lambda$apply$0(StripPrefixGatewayFilterFactory.java:62)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at com.syscloud.gateway.filter.SwaggerHeaderFilter.lambda$apply$0(SwaggerHeaderFilter.java:24)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:62)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler.handle(FilteringWebHandler.java:87)
	at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:45)
	at org.springframework.web.reactive.DispatcherHandler.invokeHandler(DispatcherHandler.java:168)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$1(DispatcherHandler.java:160)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.DrainUtils.postCompleteDrainDelayError(DrainUtils.java:296)
	at reactor.core.publisher.DrainUtils.postCompleteDelayError(DrainUtils.java:357)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:144)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:102)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:42)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:391)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:238)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:179)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1054)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)
	at reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)
	at reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:134)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onComplete(FluxFlattenIterable.java:255)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1056)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxMaterialize.subscribe(FluxMaterialize.java:40)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxDematerialize.subscribe(FluxDematerialize.java:39)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.FluxFilter.subscribe(FluxFilter.java:52)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1626)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:380)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:11:29.768[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:11:29.770[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 用户Token过期异常

com.syscloud.base.auth.expection.auth.UserTokenException: User token is null or empty!
	at com.syscloud.provider.auth.jwt.UserAuthUtil.getInfoFromToken(UserAuthUtil.java:24)
	at com.syscloud.gateway.filter.GlobalRouteFilter.getJWTUser(GlobalRouteFilter.java:127)
	at com.syscloud.gateway.filter.GlobalRouteFilter.filter(GlobalRouteFilter.java:58)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.WebsocketRoutingFilter.filter(WebsocketRoutingFilter.java:65)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter.filter(AdaptCachedBodyGlobalFilter.java:45)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.LoadBalancerClientFilter.filter(LoadBalancerClientFilter.java:88)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter.filter(RouteToRequestUrlFilter.java:76)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory.lambda$apply$0(StripPrefixGatewayFilterFactory.java:62)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at com.syscloud.gateway.filter.SwaggerHeaderFilter.lambda$apply$0(SwaggerHeaderFilter.java:24)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:62)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler.handle(FilteringWebHandler.java:87)
	at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:45)
	at org.springframework.web.reactive.DispatcherHandler.invokeHandler(DispatcherHandler.java:168)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$1(DispatcherHandler.java:160)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.DrainUtils.postCompleteDrainDelayError(DrainUtils.java:296)
	at reactor.core.publisher.DrainUtils.postCompleteDelayError(DrainUtils.java:357)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:144)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:102)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:42)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:391)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:238)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:179)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1054)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)
	at reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)
	at reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:134)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onComplete(FluxFlattenIterable.java:255)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1056)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxMaterialize.subscribe(FluxMaterialize.java:40)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxDematerialize.subscribe(FluxDematerialize.java:39)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.FluxFilter.subscribe(FluxFilter.java:52)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1626)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:380)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:11:39.340[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:11:39.340[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 用户Token过期异常

com.syscloud.base.auth.expection.auth.UserTokenException: User token is null or empty!
	at com.syscloud.provider.auth.jwt.UserAuthUtil.getInfoFromToken(UserAuthUtil.java:24)
	at com.syscloud.gateway.filter.GlobalRouteFilter.getJWTUser(GlobalRouteFilter.java:127)
	at com.syscloud.gateway.filter.GlobalRouteFilter.filter(GlobalRouteFilter.java:58)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.WebsocketRoutingFilter.filter(WebsocketRoutingFilter.java:65)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter.filter(AdaptCachedBodyGlobalFilter.java:45)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.LoadBalancerClientFilter.filter(LoadBalancerClientFilter.java:88)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter.filter(RouteToRequestUrlFilter.java:76)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory.lambda$apply$0(StripPrefixGatewayFilterFactory.java:62)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at com.syscloud.gateway.filter.SwaggerHeaderFilter.lambda$apply$0(SwaggerHeaderFilter.java:24)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:62)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler.handle(FilteringWebHandler.java:87)
	at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:45)
	at org.springframework.web.reactive.DispatcherHandler.invokeHandler(DispatcherHandler.java:168)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$1(DispatcherHandler.java:160)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.DrainUtils.postCompleteDrainDelayError(DrainUtils.java:296)
	at reactor.core.publisher.DrainUtils.postCompleteDelayError(DrainUtils.java:357)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:144)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:102)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:42)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:300)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:187)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:157)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:102)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:64)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:88)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxDematerialize.subscribe(FluxDematerialize.java:39)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.FluxFilter.subscribe(FluxFilter.java:52)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1626)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:380)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:11:53.291[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:11:53.297[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 用户Token过期异常

com.syscloud.base.auth.expection.auth.UserTokenException: User token is null or empty!
	at com.syscloud.provider.auth.jwt.UserAuthUtil.getInfoFromToken(UserAuthUtil.java:24)
	at com.syscloud.gateway.filter.GlobalRouteFilter.getJWTUser(GlobalRouteFilter.java:127)
	at com.syscloud.gateway.filter.GlobalRouteFilter.filter(GlobalRouteFilter.java:58)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.WebsocketRoutingFilter.filter(WebsocketRoutingFilter.java:65)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter.filter(AdaptCachedBodyGlobalFilter.java:45)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.LoadBalancerClientFilter.filter(LoadBalancerClientFilter.java:88)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter.filter(RouteToRequestUrlFilter.java:76)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory.lambda$apply$0(StripPrefixGatewayFilterFactory.java:62)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at com.syscloud.gateway.filter.SwaggerHeaderFilter.lambda$apply$0(SwaggerHeaderFilter.java:24)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:62)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$GatewayFilterAdapter.filter(FilteringWebHandler.java:121)
	at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:103)
	at org.springframework.cloud.gateway.handler.FilteringWebHandler.handle(FilteringWebHandler.java:87)
	at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:45)
	at org.springframework.web.reactive.DispatcherHandler.invokeHandler(DispatcherHandler.java:168)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$1(DispatcherHandler.java:160)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.DrainUtils.postCompleteDrainDelayError(DrainUtils.java:296)
	at reactor.core.publisher.DrainUtils.postCompleteDelayError(DrainUtils.java:357)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:144)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:102)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:42)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:391)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:238)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:179)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1054)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)
	at reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)
	at reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:134)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:633)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onComplete(FluxFlattenIterable.java:255)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1056)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxMaterialize.subscribe(FluxMaterialize.java:40)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlattenIterable.subscribe(MonoFlattenIterable.java:101)
	at reactor.core.publisher.FluxDematerialize.subscribe(FluxDematerialize.java:39)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.FluxFilter.subscribe(FluxFilter.java:52)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1069)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1626)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:380)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:12:11.880[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/login.json
[2m2018-09-07 17:12:12.588[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:14:28.942[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:14:29.139[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:14:31.066[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:14:31.244[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:14:54.642[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:14:54.973[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:14:55.058[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:14:57.586[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:15:00.260[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:15:20.191[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:15:57.354[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:15:59.629[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:16:43.261[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:16:43.393[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:16:45.367[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:16:45.528[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:54.007[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:54.972[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:55.841[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:56.349[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:57.463[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:58.138[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:16:58.944[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:00.943[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:01.346[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:04.784[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:05.383[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:07.358[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:17:09.545[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:17:09.651[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:17:11.408[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:17:11.514[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:14.465[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:15.257[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:15.936[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:16.388[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:16.829[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:17.270[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:37.065[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:42.114[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:42.520[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:42.905[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:43.737[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:44.720[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:17:45.253[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:18:12.722[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:18:14.764[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:18:14.852[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:18:16.274[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/log/page.json
[2m2018-09-07 17:18:39.717[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:18:39.968[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:18:40.018[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:18:51.198[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:18:51.445[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:18:51.500[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:19:05.204[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:19:05.448[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:19:05.497[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:19:17.704[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:19:17.965[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:19:18.052[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:19:23.889[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:19:42.149[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:20:20.200[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:22:16.770[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:22:24.013[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:22:27.530[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:22:37.496[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:22:39.899[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:22:40.022[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:22:43.935[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:22:44.022[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:47.394[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:47.975[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:49.347[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:49.737[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:50.135[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:22:50.483[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:23:53.071[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:24:14.277[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:24:31.867[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:24:54.685[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/save.json
[2m2018-09-07 17:24:56.968[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:24:58.978[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:24:59.061[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:00.656[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:01.301[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:01.799[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:02.430[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:03.222[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:03.649[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:04.131[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:04.643[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:05.160[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:05.654[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:06.366[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:07.326[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:09.294[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:10.112[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:10.587[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:11.013[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:11.567[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:11.954[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:12.806[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:13.831[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:14.328[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:15.050[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:19.394[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/update.json
[2m2018-09-07 17:25:19.603[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:20.208[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:25:28.650[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/update.json
[2m2018-09-07 17:25:28.850[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:34.375[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/update.json
[2m2018-09-07 17:25:34.565[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:38.518[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/update.json
[2m2018-09-07 17:25:38.744[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:44.048[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/update.json
[2m2018-09-07 17:25:44.296[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:46.445[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:47.407[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:47.998[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:48.345[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:49.314[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:49.632[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:50.090[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:50.611[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:25:50.950[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:03.343[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:03.960[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:04.469[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:04.928[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:06.404[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:07.158[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:07.799[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:08.268[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:26:14.102[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:30:20.216[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:31:32.567[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:31:32.714[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:34:39.492[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:35:20.225[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:39:31.155[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:39:31.788[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:39:37.954[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/login.json
[2m2018-09-07 17:39:39.881[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/login.json
[2m2018-09-07 17:39:41.266[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:39:41.267[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.lambda$onComplete$0(ChannelOperationsHandler.java:540)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:41.268[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.lambda$onComplete$0(ChannelOperationsHandler.java:540)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:41.900[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:39:41.902[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:41.903[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:44.977[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:39:44.977[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:44.980[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-4][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:39:48.745[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:39:48.855[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:49.989[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:50.891[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:52.217[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:52.883[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:53.696[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:39:56.200[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:40:20.233[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:40:22.040[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:41:42.406[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:41:42.536[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:41:45.959[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:41:46.370[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:41:47.248[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:42:34.413[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:44:01.010[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[pool-8-thread-1][0;39m [36mo.s.s.s.TaskUtils$LoggingErrorHandler   [0;39m [2m:[0;39m Unexpected error occurred in scheduled task.

feign.RetryableException: Read timed out executing POST http://provider-user/client/servicePubKey?clientId=hmst-gateway&secret=123456
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy125.getServicePublicKey(Unknown Source)
	at com.syscloud.provider.auth.runner.AuthClientRunner.refreshServicePubKey(AuthClientRunner.java:53)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 17 common frames omitted

[2m2018-09-07 17:44:02.021[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[pool-8-thread-1][0;39m [36mo.s.s.s.TaskUtils$LoggingErrorHandler   [0;39m [2m:[0;39m Unexpected error occurred in scheduled task.

feign.RetryableException: Read timed out executing POST http://provider-user/client/userPubKey?clientId=hmst-gateway&secret=123456
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy125.getUserPublicKey(Unknown Source)
	at com.syscloud.provider.auth.runner.AuthClientRunner.refreshUserPubKey(AuthClientRunner.java:45)
	at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 17 common frames omitted

[2m2018-09-07 17:44:47.590[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:44:47.705[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:44:49.375[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:44:51.573[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:44:53.295[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:45:00.039[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:45:00.040[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.lambda$onComplete$0(ChannelOperationsHandler.java:540)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:00.040[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.lambda$onComplete$0(ChannelOperationsHandler.java:540)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:01.988[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:45:01.992[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onComplete(ChannelSendOperator.java:197)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:245)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.ipc.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:377)
	at reactor.ipc.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202)
	at reactor.ipc.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:342)
	at reactor.ipc.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:336)
	at reactor.ipc.netty.channel.ChannelOperations.onHandlerTerminate(ChannelOperations.java:420)
	at reactor.ipc.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:597)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:146)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:02.003[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-2][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onComplete(ChannelSendOperator.java:197)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:245)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.ipc.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:377)
	at reactor.ipc.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202)
	at reactor.ipc.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:342)
	at reactor.ipc.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:336)
	at reactor.ipc.netty.channel.ChannelOperations.onHandlerTerminate(ChannelOperations.java:420)
	at reactor.ipc.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:597)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:146)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:01.995[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mo.s.w.s.adapter.HttpWebHandlerAdapter   [0;39m [2m:[0;39m Unhandled failure: 您的主机中的软件中止了一个已建立的连接。, response already set (status=200)
[2m2018-09-07 17:45:02.022[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mo.s.h.s.r.ReactorHttpHandlerAdapter     [0;39m [2m:[0;39m Handling completed with error

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:02.025[0;39m [31mERROR[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mr.ipc.netty.channel.ChannelOperations   [0;39m [2m:[0;39m [HttpServer] Error processing connection. Requesting close the channel

java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:245)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:257)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.subscribe(ChannelSendOperator.java:282)
	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:59)
	at reactor.core.publisher.FluxContextStart.subscribe(FluxContextStart.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:6873)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:461)
	at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:191)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1129)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:745)

[2m2018-09-07 17:45:05.161[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/login.json
[2m2018-09-07 17:45:05.402[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:45:07.421[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:45:08.035[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:45:09.551[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:45:20.241[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:45:35.073[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/save.json
[2m2018-09-07 17:45:35.440[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:45:35.552[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:45:38.980[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:45:41.023[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:49:02.395[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/dept/tree.json
[2m2018-09-07 17:49:02.545[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/user/list.json
[2m2018-09-07 17:49:03.755[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/role/list.json
[2m2018-09-07 17:49:04.295[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/aclModule/tree.json
[2m2018-09-07 17:49:04.371[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:07.682[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:08.347[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:08.998[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:09.800[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-3][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:10.294[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:11.461[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:11.918[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:12.493[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:49:13.232[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:50:20.257[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[trap-executor-0][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2018-09-07 17:51:50.321[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:51:50.891[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:51:51.395[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:51:52.471[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
[2m2018-09-07 17:51:53.412[0;39m [32m INFO[0;39m [33m[hmst-gateway,,,,][0;39m [35m5140[0;39m [2m---[0;39m [2m[ctor-http-nio-1][0;39m [36mc.s.gateway.filter.GlobalRouteFilter    [0;39m [2m:[0;39m 网关接收请求地址为:/sys/acl/page.json
